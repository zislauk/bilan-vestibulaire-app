
"use client";

import { useState } from "react";

export default function BilanVestibulaireForm() {
  const [form, setForm] = useState({
    nom: "",
    prenom: "",
    naissance: "",
    profession: "",
    medecin: "",
    antecedents: "",
    motif: "",
    contexte: "",
    duree: "",
    facteurs: "",
    evolution: "",
    signes: "",
    neuro: "",
    oculomoteur: "",
    romberg: "",
    fukuda: "",
    hit: "",
    vhit: "",
    dht: "",
    vvs: "",
    avd: "",
    dhi: "",
    posturo: "",
    interpretation: "",
    conclusion: "",
  });

  const prompt = `Ce document contient les donn√©es brutes d‚Äôun bilan vestibulaire.
Je souhaite que tu les reformules sous forme d‚Äôun compte rendu clinique d√©taill√©, structur√©, professionnel, adapt√© √† la lecture par un m√©decin prescripteur.

Merci de structurer le document selon les sections suivantes, si les donn√©es le permettent :
‚Ä¢ Motif de consultation
‚Ä¢ Anamn√®se (contexte, ant√©c√©dents, signes fonctionnels, √©volutivit√©, facteurs d√©clenchants)
‚Ä¢ √âvaluation clinique (bilan neurologique, oculomoteur, postural, locomoteur‚Ä¶)
‚Ä¢ Explorations vestibulaires (Dix-Hallpike, Head Impulse Test, VHIT, Fukuda, Romberg, etc.)
‚Ä¢ Analyse clinique / hypoth√®se diagnostique fonctionnelle
‚Ä¢ Orientations th√©rapeutiques propos√©es / prise en charge envisag√©e
‚Ä¢ Compte rendu de bilan (synth√®se finale, style lettre de liaison)

Si une analyse posturographique ou un test r√©alis√© en r√©alit√© virtuelle est mentionn√©, merci d‚Äôen int√©grer les r√©sultats et leur interpr√©tation clinique dans la section appropri√©e.

Adopte un ton neutre, clinique et rigoureux, sans simplification excessive. Utilise un vocabulaire m√©dical adapt√©, si les donn√©es le permettent.

Termine toujours le document par la signature suivante :
Lo√Øc Taureau ‚Äì Masseur-Kin√©sith√©rapeute
Dipl√¥m√© d'etat, DU de r√©√©ducation vestibulaire

Voici les donn√©es :\n\n${JSON.stringify(form, null, 2)}`;

  const copyPrompt = () => {
    navigator.clipboard.writeText(prompt);
    alert("Prompt copi√© dans le presse-papier !");
  };

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const renderInput = (label, name, textarea = false) => (
    <div>
      <label><strong>{label}</strong></label>
      {textarea ? (
        <textarea
          name={name}
          value={form[name]}
          onChange={handleChange}
          className="border w-full p-2 mb-4"
        />
      ) : (
        <input
          type="text"
          name={name}
          value={form[name]}
          onChange={handleChange}
          className="border w-full p-2 mb-4"
        />
      )}
    </div>
  );

  return (
    <div className="max-w-3xl mx-auto p-6 space-y-6">
      <h2 className="text-xl font-bold">Informations Patient</h2>
      {renderInput("Nom", "nom")}
      {renderInput("Pr√©nom", "prenom")}
      {renderInput("Date de naissance", "naissance")}
      {renderInput("Profession / Loisir", "profession")}
      {renderInput("M√©decin traitant", "medecin")}
      {renderInput("Ant√©c√©dents m√©dicaux", "antecedents", true)}

      <h2 className="text-xl font-bold">Motif de consultation</h2>
      {renderInput("Motif", "motif", true)}

      <h2 className="text-xl font-bold">Anamn√®se</h2>
      {renderInput("Contexte", "contexte", true)}
      {renderInput("Dur√©e du vertige", "duree")}
      {renderInput("Facteur d√©clenchant le vertige", "facteurs")}
      {renderInput("√âvolutivit√©", "evolution")}
      {renderInput("Signes associ√©s", "signes", true)}

      <h2 className="text-xl font-bold">Examen neurologique oculomoteur</h2>
      {renderInput("Examen neurologique", "neuro", true)}
      {renderInput("Examen oculomoteur", "oculomoteur", true)}

      <h2 className="text-xl font-bold">Explorations vestibulaires</h2>
      {renderInput("Romberg", "romberg")}
      {renderInput("Fukuda", "fukuda")}
      {renderInput("Head Impulse Test (HIT)", "hit")}
      {renderInput("Vid√©o HIT (VHIT)", "vhit")}
      {renderInput("Dix-Hallpike Test", "dht")}
      {renderInput("VVS / HVZ", "vvs")}
      {renderInput("AVD", "avd")}
      {renderInput("Score DHI", "dhi")}
      {renderInput("Posturographie / VR", "posturo", true)}
      {renderInput("Interpr√©tation clinique", "interpretation", true)}

      <h2 className="text-xl font-bold">Conclusion</h2>
      {renderInput("Synth√®se finale", "conclusion", true)}

      <button
        onClick={copyPrompt}
        className="bg-green-600 hover:bg-green-700 text-white font-semibold py-2 px-4 rounded"
      >
        üìã Copier le prompt pour ChatGPT
      </button>
    </div>
  );
}
